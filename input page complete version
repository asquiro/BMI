import 'package:flutter/material.dart';
import 'iconcontent.dart';
import 'resuable.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';

import 'constant.dart';

enum Gender {
  male,
  female,
}

class InputPage extends StatefulWidget {
  const InputPage({Key? key}) : super(key: key);

  @override
  State<StatefulWidget> createState() {
    return _InputPageState();
  }
}

class _InputPageState extends State<InputPage> {
  Gender? selectedGender;
  int height = 180;
  int weight = 60;
  int length = 19;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Center(
          child: Text('BMI CALCULATOR'),
        ),
      ),
      body: Column(
        crossAxisAlignment: CrossAxisAlignment.stretch,
        children: [
          Expanded(
            child: Row(
              children: [
                Expanded(
                  child: ResuableCard(
                    onPress: () {
                      setState(() {
                        selectedGender = Gender.male;
                      });
                    },
                    colour: selectedGender == Gender.male
                        ? KActiveColor
                        : KInactiveColor,
                    childClass: IconContents(
                      icon: FontAwesomeIcons.mars,
                      label: 'Male',
                    ),
                  ),
                ),
                Expanded(
                  child: ResuableCard(
                    onPress: () {
                      setState(() {
                        selectedGender = Gender.female;
                      });
                    },
                    childClass: IconContents(
                      icon: FontAwesomeIcons.redRiver,
                      label: 'Female',
                    ),
                    colour: selectedGender == Gender.female
                        ? KActiveColor
                        : KInactiveColor,
                  ),
                ),
              ],
            ),
          ),
          Expanded(
            child: ResuableCard(
              onPress: () {
                setState(() {});
              },
              colour: KActiveColor,
              childClass: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: <Widget>[
                  Text(
                    'Height',
                    style: KLabelTextStyle,
                  ),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    crossAxisAlignment: CrossAxisAlignment.baseline,
                    textBaseline: TextBaseline.alphabetic,
                    children: <Widget>[
                      Text(
                        height.toString(),
                        style: KFontWeight,
                      ),
                      Text(
                        'CM',
                        style: KLabelTextStyle,
                      ),
                    ],
                  ),
                  SliderTheme(
                    data: SliderTheme.of(context).copyWith(
                      inactiveTrackColor: Color(0xFF8D8E98),
                      thumbShape:
                          RoundSliderThumbShape(enabledThumbRadius: 15.0),
                      overlayShape:
                          RoundSliderOverlayShape(overlayRadius: 25.0),
                      activeTrackColor: Colors.white,
                      overlayColor: Color(0x29EB1555),
                      thumbColor: Color(0xFFEB1555),
                    ),
                    child: Slider(
                        value: height.toDouble(),
                        min: 120.0,
                        max: 220.0,
                        onChanged: (double newValue) {
                          setState(() {
                            height = newValue.round();
                          });
                        }),
                  )
                ],
              ),
            ),
          ),
          Expanded(
            child: Row(
              children: [
                Expanded(
                  child: ResuableCard(
                    onPress: () {},
                    childClass: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          'Weight',
                          style: KLabelTextStyle,
                        ),
                        Text(
                          weight.toString(),
                          style: KFontWeight,
                        ),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            RoundIconButton(
                              onPressed: () {
                                setState(() {
                                  weight--;
                                });
                              },
                              icon: FontAwesomeIcons.minus,
                            ),
                            SizedBox(width: 10.0),
                            RoundIconButton(
                                onPressed: () {
                                  setState(() {
                                    weight++;
                                  });
                                },
                                icon: FontAwesomeIcons.plus),
                          ],
                        ),
                      ],
                    ),
                    colour: KActiveColor,
                  ),
                ),
                Expanded(
                  child: ResuableCard(
                    onPress: () {},
                    colour: KActiveColor,
                    childClass: Column(
                      mainAxisAlignment: MainAxisAlignment.center,
                      children: [
                        Text(
                          'AGE',
                          style: KLabelTextStyle,
                        ),
                        SizedBox(
                          height: 10.0,
                        ),
                        Text(
                          length.toString(),
                          style: KFontWeight,
                        ),
                        Row(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            IconButton(
                                icon: FontAwesomeIcons.minus,
                                ontap: () {
                                  setState(() {
                                    length--;
                                  });
                                }),
                            SizedBox(
                              width: 8.0,
                            ),
                            IconButton(
                                icon: FontAwesomeIcons.plus,
                                ontap: () {
                                  setState(() {
                                    length++;
                                  });
                                }),
                          ],
                        )
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
          Container(
            width: double.infinity,
            height: KButtomContainerHeight,
            margin: EdgeInsets.all(8.0),
            decoration: BoxDecoration(
              color: KCntainerColor,
              borderRadius: BorderRadius.circular(10.0),
            ),
          )
        ],
      ),
    );
  }
}

class RoundIconButton extends StatelessWidget {
  const RoundIconButton({required this.icon, required this.onPressed});
  final IconData icon;
  final VoidCallback onPressed;
  @override
  Widget build(BuildContext context) {
    return RawMaterialButton(
      child: Icon(icon),
      onPressed: onPressed,
      constraints: BoxConstraints.tightFor(
        width: 49.0,
        height: 49.0,
      ),
      shape: CircleBorder(),
      elevation: 6.0,
      fillColor: Color(0xFF4C4F5C),
    );
  }
}

class IconButton extends StatelessWidget {
  const IconButton({required this.icon, required this.ontap});

  final IconData icon;
  final VoidCallback ontap;
  @override
  Widget build(BuildContext context) {
    return RawMaterialButton(
      child: Icon(icon),
      onPressed: ontap,
      constraints: BoxConstraints.tightFor(
        width: 54.0,
        height: 49.0,
      ),
      fillColor: Color(0xFF4C4F5C),
      elevation: 0.0,
      shape: CircleBorder(),
    );
  }
}
